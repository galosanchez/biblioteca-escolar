package com.galosanchez.view;

import com.galosanchez.controller.AuthorController;
import com.galosanchez.controller.BookController;
import com.galosanchez.domain.Author;
import com.galosanchez.domain.Book;
import com.galosanchez.domain.CopyBook;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 * Esta clase permite ingresar un nuevo libro
 * @author Galo Sánchez
 */
public class DialogNewBook extends javax.swing.JDialog {

    private int xMouse, yMouse;
    private final JFrame jFrameParent;
    private ArrayList<Author> authors = new ArrayList<>();

    public DialogNewBook(JFrame parent, boolean modal) {
        super(parent, modal);
        this.jFrameParent = parent;
        initComponents();

        /* Fondo de JDialog tranparente */
        this.setBackground(new Color(0, 0, 0, 0));
        bg.setBackground(new Color(0, 0, 0, 0));
        /* Hacer que el jLabel del boton Crear sea focusable */
        jLabelButtonCreate.setFocusable(true);
        /* AutoCompleteDecorator mejora la busqueda en combobox */
        AutoCompleteDecorator.decorate(jComboBoxTitle);
        AutoCompleteDecorator.decorate(jComboBoxAuthor);
        /* Creación de eventos focus al ComboBoxTitle*/
        eventFocusComboBoxTitle();
        /* Obtener la lista de autores */
        authors = AuthorController.authorList();
        /* Cargar los autores en el bombobox */
        loadAuthors();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelContent = new javax.swing.JPanel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jPanelClose = new javax.swing.JPanel();
        jImgClose = new javax.swing.JLabel();
        jPanelDivide = new javax.swing.JPanel();
        jPanelForm = new javax.swing.JPanel();
        jLabelName = new javax.swing.JLabel();
        jLabelErrorTitle = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jPanelFocusCode = new javax.swing.JPanel();
        jLabelErrorAuthor = new javax.swing.JLabel();
        jLabelCI = new javax.swing.JLabel();
        jTextFieldEstado = new javax.swing.JTextField();
        jPanelFocusEditorial = new javax.swing.JPanel();
        jLabelErrorEstado = new javax.swing.JLabel();
        jLabelPhone = new javax.swing.JLabel();
        jPanelFocusYear = new javax.swing.JPanel();
        jLabelErrorYear = new javax.swing.JLabel();
        jPanelCleanAll = new javax.swing.JPanel();
        jLabelCleanAll = new javax.swing.JLabel();
        jPanelButtonCreate = new javax.swing.JPanel();
        jLabelButtonCreate = new javax.swing.JLabel();
        jLabelPhone1 = new javax.swing.JLabel();
        jTextFieldYear = new javax.swing.JTextField();
        jLabelCI1 = new javax.swing.JLabel();
        jTextFieldEditorial = new javax.swing.JTextField();
        jPanelFocusEstate = new javax.swing.JPanel();
        jLabelErrorEditorial = new javax.swing.JLabel();
        jComboBoxAuthor = new javax.swing.JComboBox<>();
        jComboBoxTitle = new javax.swing.JComboBox<>();
        jLabelErrorCode = new javax.swing.JLabel();
        jCheckBoxExists = new javax.swing.JCheckBox();
        bg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelContent.setBackground(new java.awt.Color(255, 255, 255));
        jPanelContent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelLeft.setBackground(new java.awt.Color(123, 31, 162));

        javax.swing.GroupLayout jPanelLeftLayout = new javax.swing.GroupLayout(jPanelLeft);
        jPanelLeft.setLayout(jPanelLeftLayout);
        jPanelLeftLayout.setHorizontalGroup(
            jPanelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        jPanelLeftLayout.setVerticalGroup(
            jPanelLeftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        jPanelContent.add(jPanelLeft, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 15, 450));

        jPanelTop.setBackground(new java.awt.Color(255, 255, 255));
        jPanelTop.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelTopMouseDragged(evt);
            }
        });
        jPanelTop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelTopMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTopLayout = new javax.swing.GroupLayout(jPanelTop);
        jPanelTop.setLayout(jPanelTopLayout);
        jPanelTopLayout.setHorizontalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 420, Short.MAX_VALUE)
        );
        jPanelTopLayout.setVerticalGroup(
            jPanelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanelContent.add(jPanelTop, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 20));

        jLabelTitle.setFont(new java.awt.Font("Hind Siliguri SemiBold", 0, 20)); // NOI18N
        jLabelTitle.setForeground(new java.awt.Color(123, 31, 162));
        jLabelTitle.setText("Nuevo ejemplar de libro");
        jPanelContent.add(jLabelTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 0, -1, 65));

        jPanelClose.setBackground(new java.awt.Color(255, 255, 255));

        jImgClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jImgClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/galosanchez/images/ic_close_dialog.png"))); // NOI18N
        jImgClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jImgCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jImgCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jImgCloseMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelCloseLayout = new javax.swing.GroupLayout(jPanelClose);
        jPanelClose.setLayout(jPanelCloseLayout);
        jPanelCloseLayout.setHorizontalGroup(
            jPanelCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jImgClose, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelCloseLayout.setVerticalGroup(
            jPanelCloseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jImgClose, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanelContent.add(jPanelClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(425, 14, 40, 40));

        jPanelDivide.setBackground(new java.awt.Color(224, 224, 224));

        javax.swing.GroupLayout jPanelDivideLayout = new javax.swing.GroupLayout(jPanelDivide);
        jPanelDivide.setLayout(jPanelDivideLayout);
        jPanelDivideLayout.setHorizontalGroup(
            jPanelDivideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );
        jPanelDivideLayout.setVerticalGroup(
            jPanelDivideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1, Short.MAX_VALUE)
        );

        jPanelContent.add(jPanelDivide, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 65, 460, 1));

        jPanelForm.setBackground(new java.awt.Color(255, 255, 255));
        jPanelForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelName.setFont(new java.awt.Font("Hind Siliguri", 0, 14)); // NOI18N
        jLabelName.setForeground(new java.awt.Color(158, 158, 158));
        jLabelName.setText("Título");
        jPanelForm.add(jLabelName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 16));

        jLabelErrorTitle.setFont(new java.awt.Font("Hind Siliguri", 0, 12)); // NOI18N
        jLabelErrorTitle.setForeground(new java.awt.Color(205, 92, 92));
        jPanelForm.add(jLabelErrorTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 47, 420, 14));

        jLabelEmail.setFont(new java.awt.Font("Hind Siliguri", 0, 14)); // NOI18N
        jLabelEmail.setForeground(new java.awt.Color(158, 158, 158));
        jLabelEmail.setText("Código");
        jPanelForm.add(jLabelEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 69, -1, 17));

        jTextFieldCode.setFont(new java.awt.Font("Hind Siliguri", 0, 16)); // NOI18N
        jTextFieldCode.setForeground(new java.awt.Color(33, 33, 33));
        jTextFieldCode.setBorder(null);
        jTextFieldCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodeFocusLost(evt);
            }
        });
        jPanelForm.add(jTextFieldCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 89, 200, 20));

        jPanelFocusCode.setBackground(new java.awt.Color(158, 158, 158));

        javax.swing.GroupLayout jPanelFocusCodeLayout = new javax.swing.GroupLayout(jPanelFocusCode);
        jPanelFocusCode.setLayout(jPanelFocusCodeLayout);
        jPanelFocusCodeLayout.setHorizontalGroup(
            jPanelFocusCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelFocusCodeLayout.setVerticalGroup(
            jPanelFocusCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelForm.add(jPanelFocusCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 113, 200, 1));

        jLabelErrorAuthor.setFont(new java.awt.Font("Hind Siliguri", 0, 12)); // NOI18N
        jLabelErrorAuthor.setForeground(new java.awt.Color(205, 92, 92));
        jPanelForm.add(jLabelErrorAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 114, 200, 14));

        jLabelCI.setFont(new java.awt.Font("Hind Siliguri", 0, 14)); // NOI18N
        jLabelCI.setForeground(new java.awt.Color(158, 158, 158));
        jLabelCI.setText("Estado");
        jPanelForm.add(jLabelCI, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 203, -1, 16));

        jTextFieldEstado.setFont(new java.awt.Font("Hind Siliguri", 0, 16)); // NOI18N
        jTextFieldEstado.setForeground(new java.awt.Color(33, 33, 33));
        jTextFieldEstado.setBorder(null);
        jTextFieldEstado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEstadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldEstadoFocusLost(evt);
            }
        });
        jPanelForm.add(jTextFieldEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 223, 420, 20));

        jPanelFocusEditorial.setBackground(new java.awt.Color(158, 158, 158));

        javax.swing.GroupLayout jPanelFocusEditorialLayout = new javax.swing.GroupLayout(jPanelFocusEditorial);
        jPanelFocusEditorial.setLayout(jPanelFocusEditorialLayout);
        jPanelFocusEditorialLayout.setHorizontalGroup(
            jPanelFocusEditorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelFocusEditorialLayout.setVerticalGroup(
            jPanelFocusEditorialLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelForm.add(jPanelFocusEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 200, 1));

        jLabelErrorEstado.setFont(new java.awt.Font("Hind Siliguri", 0, 12)); // NOI18N
        jLabelErrorEstado.setForeground(new java.awt.Color(205, 92, 92));
        jPanelForm.add(jLabelErrorEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 248, 420, 14));

        jLabelPhone.setFont(new java.awt.Font("Hind Siliguri", 0, 14)); // NOI18N
        jLabelPhone.setForeground(new java.awt.Color(158, 158, 158));
        jLabelPhone.setText("Autor");
        jPanelForm.add(jLabelPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 69, -1, 16));

        jPanelFocusYear.setBackground(new java.awt.Color(158, 158, 158));

        javax.swing.GroupLayout jPanelFocusYearLayout = new javax.swing.GroupLayout(jPanelFocusYear);
        jPanelFocusYear.setLayout(jPanelFocusYearLayout);
        jPanelFocusYearLayout.setHorizontalGroup(
            jPanelFocusYearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelFocusYearLayout.setVerticalGroup(
            jPanelFocusYearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelForm.add(jPanelFocusYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 180, 200, 1));

        jLabelErrorYear.setFont(new java.awt.Font("Hind Siliguri", 0, 12)); // NOI18N
        jLabelErrorYear.setForeground(new java.awt.Color(205, 92, 92));
        jPanelForm.add(jLabelErrorYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 181, 200, 14));

        jPanelCleanAll.setBackground(new java.awt.Color(255, 255, 255));

        jLabelCleanAll.setFont(new java.awt.Font("Hind Siliguri Medium", 0, 14)); // NOI18N
        jLabelCleanAll.setForeground(new java.awt.Color(158, 158, 158));
        jLabelCleanAll.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCleanAll.setText("Limpiar campos");
        jLabelCleanAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelCleanAllMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelCleanAllMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelCleanAllMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelCleanAllLayout = new javax.swing.GroupLayout(jPanelCleanAll);
        jPanelCleanAll.setLayout(jPanelCleanAllLayout);
        jPanelCleanAllLayout.setHorizontalGroup(
            jPanelCleanAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelCleanAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelCleanAllLayout.setVerticalGroup(
            jPanelCleanAllLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCleanAllLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelCleanAll, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelForm.add(jPanelCleanAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 312, 100, 32));

        jPanelButtonCreate.setBackground(new java.awt.Color(156, 39, 176));

        jLabelButtonCreate.setFont(new java.awt.Font("Hind Siliguri Medium", 0, 14)); // NOI18N
        jLabelButtonCreate.setForeground(new java.awt.Color(255, 255, 255));
        jLabelButtonCreate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelButtonCreate.setText("Ingresar libro");
        jLabelButtonCreate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelButtonCreateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabelButtonCreateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabelButtonCreateMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanelButtonCreateLayout = new javax.swing.GroupLayout(jPanelButtonCreate);
        jPanelButtonCreate.setLayout(jPanelButtonCreateLayout);
        jPanelButtonCreateLayout.setHorizontalGroup(
            jPanelButtonCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelButtonCreate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelButtonCreateLayout.setVerticalGroup(
            jPanelButtonCreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelButtonCreate, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
        );

        jPanelForm.add(jPanelButtonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 312, 110, 32));

        jLabelPhone1.setFont(new java.awt.Font("Hind Siliguri", 0, 14)); // NOI18N
        jLabelPhone1.setForeground(new java.awt.Color(158, 158, 158));
        jLabelPhone1.setText("Año");
        jPanelForm.add(jLabelPhone1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 136, -1, 16));

        jTextFieldYear.setFont(new java.awt.Font("Hind Siliguri", 0, 16)); // NOI18N
        jTextFieldYear.setForeground(new java.awt.Color(33, 33, 33));
        jTextFieldYear.setBorder(null);
        jTextFieldYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldYearFocusLost(evt);
            }
        });
        jPanelForm.add(jTextFieldYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 156, 200, 20));

        jLabelCI1.setFont(new java.awt.Font("Hind Siliguri", 0, 14)); // NOI18N
        jLabelCI1.setForeground(new java.awt.Color(158, 158, 158));
        jLabelCI1.setText("Editorial");
        jPanelForm.add(jLabelCI1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 136, -1, 16));

        jTextFieldEditorial.setFont(new java.awt.Font("Hind Siliguri", 0, 16)); // NOI18N
        jTextFieldEditorial.setForeground(new java.awt.Color(33, 33, 33));
        jTextFieldEditorial.setBorder(null);
        jTextFieldEditorial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldEditorialFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldEditorialFocusLost(evt);
            }
        });
        jPanelForm.add(jTextFieldEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 156, 200, 20));

        jPanelFocusEstate.setBackground(new java.awt.Color(158, 158, 158));

        javax.swing.GroupLayout jPanelFocusEstateLayout = new javax.swing.GroupLayout(jPanelFocusEstate);
        jPanelFocusEstate.setLayout(jPanelFocusEstateLayout);
        jPanelFocusEstateLayout.setHorizontalGroup(
            jPanelFocusEstateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelFocusEstateLayout.setVerticalGroup(
            jPanelFocusEstateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanelForm.add(jPanelFocusEstate, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 247, 420, 1));

        jLabelErrorEditorial.setFont(new java.awt.Font("Hind Siliguri", 0, 12)); // NOI18N
        jLabelErrorEditorial.setForeground(new java.awt.Color(205, 92, 92));
        jPanelForm.add(jLabelErrorEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 181, 200, 14));

        jComboBoxAuthor.setEditable(true);
        jComboBoxAuthor.setFont(new Font("Hind Siliguri", Font.PLAIN, 16));
        jComboBoxAuthor.setMaximumRowCount(5);
        jComboBoxAuthor.setBorder(null);
        jComboBoxAuthor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelForm.add(jComboBoxAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 89, 200, 25));

        jComboBoxTitle.setEditable(true);
        jComboBoxTitle.setFont(new Font("Hind Siliguri", Font.PLAIN, 16));
        jComboBoxTitle.setMaximumRowCount(5);
        jComboBoxTitle.setToolTipText("");
        jComboBoxTitle.setBorder(null);
        jComboBoxTitle.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanelForm.add(jComboBoxTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 22, 420, 25));

        jLabelErrorCode.setFont(new java.awt.Font("Hind Siliguri", 0, 12)); // NOI18N
        jLabelErrorCode.setForeground(new java.awt.Color(205, 92, 92));
        jPanelForm.add(jLabelErrorCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 114, 200, 14));

        jCheckBoxExists.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxExists.setFont(new Font("Hind Siliguri", Font.PLAIN, 14));
        jCheckBoxExists.setForeground(new java.awt.Color(33, 33, 33));
        jCheckBoxExists.setText("Libro existente");
        jCheckBoxExists.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBoxExistsItemStateChanged(evt);
            }
        });
        jPanelForm.add(jCheckBoxExists, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, -4, -1, 20));

        jPanelContent.add(jPanelForm, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 86, 420, 344));

        getContentPane().add(jPanelContent, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 475, 450));

        bg.setPreferredSize(new java.awt.Dimension(505, 406));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/galosanchez/images/bg_new_book.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(505, 406));
        jLabel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel1.setPreferredSize(new java.awt.Dimension(505, 406));

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
        );

        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 505, 480));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Eventos que permiten arrastrar la ventana desde la barra superior
     */
    private void jPanelTopMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelTopMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_jPanelTopMousePressed

    private void jPanelTopMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelTopMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_jPanelTopMouseDragged

    /**
     * Eventos que perminen a los botones cerrar y minimizar ventana
     */
    private void jImgCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jImgCloseMouseEntered
        jPanelClose.setBackground(new java.awt.Color(245, 245, 245));
    }//GEN-LAST:event_jImgCloseMouseEntered

    private void jImgCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jImgCloseMouseExited
        jPanelClose.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_jImgCloseMouseExited

    private void jImgCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jImgCloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_jImgCloseMouseClicked

    private void jTextFieldCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodeFocusGained
        chanceColorFocusSeparator("Gained", jPanelFocusCode);
    }//GEN-LAST:event_jTextFieldCodeFocusGained

    private void jTextFieldCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodeFocusLost
        chanceColorFocusSeparator("Lost", jPanelFocusCode);
    }//GEN-LAST:event_jTextFieldCodeFocusLost

    private void jTextFieldEstadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEstadoFocusGained
        chanceColorFocusSeparator("Gained", jPanelFocusEstate);
    }//GEN-LAST:event_jTextFieldEstadoFocusGained

    private void jTextFieldEstadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEstadoFocusLost
        chanceColorFocusSeparator("Lost", jPanelFocusEstate);
    }//GEN-LAST:event_jTextFieldEstadoFocusLost

    /**
     * Metodo que permite cambiar de color de JPanel que esta debajo de un
     * TextFied para mejorar la experiencia de usurio. Dependiendo del tipo que
     * ingrese "Gained" : color de foco, o "Lost": color normal Ingresa el
     * JPanel al que se aplica el cambio
     *
     * @param tipo
     * @param panelSeparator
     */
    public void chanceColorFocusSeparator(String tipo, JPanel panelSeparator) {
        if (tipo.equals("Gained")) {
            panelSeparator.setBackground(new java.awt.Color(123, 31, 162));
            return;
        }
        if (tipo.equals("Lost")) {
            panelSeparator.setBackground(new java.awt.Color(158, 158, 158));
        }
    }

    /**
     * Eventos de boton para limpiar todos los campos del formulario
     */
    private void jLabelCleanAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCleanAllMouseEntered
        jPanelCleanAll.setBackground(new java.awt.Color(245, 245, 245));
    }//GEN-LAST:event_jLabelCleanAllMouseEntered

    private void jLabelCleanAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCleanAllMouseExited
        jPanelCleanAll.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_jLabelCleanAllMouseExited

    private void jLabelCleanAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelCleanAllMouseClicked
        cleanjLabelsError();
        cleanjTextFields();
    }//GEN-LAST:event_jLabelCleanAllMouseClicked

    /**
     * Eventos de boton "Crear autor". Mejorar apariencial al entrar con el
     * mouse
     */
    private void jLabelButtonCreateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelButtonCreateMouseEntered
        jPanelButtonCreate.setBackground(new java.awt.Color(123, 31, 162));
    }//GEN-LAST:event_jLabelButtonCreateMouseEntered

    private void jLabelButtonCreateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelButtonCreateMouseExited
        jPanelButtonCreate.setBackground(new java.awt.Color(156, 39, 176));
    }//GEN-LAST:event_jLabelButtonCreateMouseExited

    /**
     * Evento click del boton "Crear autor".
     */
    private void jLabelButtonCreateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelButtonCreateMouseClicked
        /* Limpiar todos los mensajes de error dentro del formulario */
        cleanjLabelsError();
        /* Validar que todos los campos esten con el formato correcto */
        if (!validarCamposFormato()) {
            return;
        }
        
        /* Validar que no exista el código del libro */
        try {
            if (BookController.bookCodeExist(jTextFieldCode.getText()) > 0) {
                jLabelErrorCode.setText("Existe un libro con este código.");
                return;
            }
        } catch (Exception e) {
            if (e.getLocalizedMessage().equals("3011")) {
                openDialogAlert("danger", "No se puede establecer conexión con el", "servidor");
            } else {
                openDialogAlert("danger", "Error al momento de consultar al servidor", "");
            }
            return;
        }
        
        CopyBook copyBook = new CopyBook();
        copyBook.setCode(jTextFieldCode.getText());
        copyBook.setState(jTextFieldEstado.getText());
        Book b = new Book();
        if(jCheckBoxExists.isSelected()){
            b.setId_book(jComboBoxTitle.getItemAt(jComboBoxTitle.getSelectedIndex()).getId_book());
            copyBook.setBook(b);
            /* Ingreso del ejemplar con un libro existente */
            newCopyBookWhithBookExists(copyBook);
        }else{
            Author aut = new Author();
            aut.setId_author(jComboBoxAuthor.getItemAt(jComboBoxAuthor.getSelectedIndex()).getId_author());
            b.setEditorial(jTextFieldEditorial.getText());
            b.setTitle(jComboBoxTitle.getSelectedItem().toString());
            b.setYear(jTextFieldYear.getText());
            b.setAuthor(aut);
            copyBook.setBook(b);
            newBook(copyBook);
        }

    }//GEN-LAST:event_jLabelButtonCreateMouseClicked

    private void newCopyBookWhithBookExists(CopyBook copyBook) {
        /* Enviar datos del nuevo estudiante a la base de datos */
        try {
            // Se comprueba que los datos se inbresen correctamente a la base
            if (BookController.createCopyBook(copyBook) > 0) {
                openDialogAlert("successful", " ","Creado correctamente","");
                // Limpiar campos
                cleanjLabelsError();
                cleanjTextFields();
                jComboBoxTitle.requestFocus();
                // Sino lanzar un mensaje de alerta    
            } else {
                openDialogAlert("warning", "Error al crear", "");
            }
        } catch (Exception e) {
            // Errores con la base de datos
            if (e.getLocalizedMessage().equals("3011")) {
                openDialogAlert("danger", "No se puede establecer conexión con el", "servidor");
            } else {
                openDialogAlert("danger", "Error al momento de consultar al servidor", "");
            }
        }
    }
    private void newBook(CopyBook copyBook) {
        /* Enviar datos del nuevo estudiante a la base de datos */
        try {
            // Se comprueba que los datos se inbresen correctamente a la base
            if (BookController.createAllBook(copyBook) > 0) {
                openDialogAlert("successful", " ","Creado correctamente","");
                // Limpiar campos
                cleanjLabelsError();
                cleanjTextFields();
                jComboBoxTitle.requestFocus();
                // Sino lanzar un mensaje de alerta    
            } else {
                openDialogAlert("warning", "Error al crear", "");
            }
        } catch (Exception e) {
            // Errores con la base de datos
            if (e.getLocalizedMessage().equals("3011")) {
                openDialogAlert("danger", "No se puede establecer conexión con el", "servidor");
            } else {
                openDialogAlert("danger", "Error al momento de consultar al servidor", "");
            }
        }
    }
    
    
    private void jTextFieldYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldYearFocusGained
        chanceColorFocusSeparator("Gained", jPanelFocusYear);
    }//GEN-LAST:event_jTextFieldYearFocusGained

    private void jTextFieldYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldYearFocusLost
        chanceColorFocusSeparator("Lost", jPanelFocusYear);
    }//GEN-LAST:event_jTextFieldYearFocusLost

    private void jTextFieldEditorialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEditorialFocusGained
        chanceColorFocusSeparator("Gained", jPanelFocusEditorial);
    }//GEN-LAST:event_jTextFieldEditorialFocusGained

    private void jTextFieldEditorialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldEditorialFocusLost
        chanceColorFocusSeparator("Lost", jPanelFocusEditorial);
    }//GEN-LAST:event_jTextFieldEditorialFocusLost

    private void jCheckBoxExistsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBoxExistsItemStateChanged
        if (jCheckBoxExists.isSelected()) {
            jComboBoxTitle.removeAllItems();
            ArrayList<Book> bookList = BookController.listBooks();
            for (Book book : bookList) {
                jComboBoxTitle.addItem(new Book(book.getId_book(), book.getEditorial(), book.getTitle(), book.getYear(), book.getAuthor()));
            }
            jComboBoxTitle.setSelectedIndex(-1);
            
            jComboBoxAuthor.removeAllItems();
            jTextFieldEditorial.setEditable(false);
            jTextFieldYear.setEditable(false);
            jComboBoxAuthor.setEditable(false);
        } else {
            loadAuthors();
            jComboBoxTitle.removeAllItems();
            jTextFieldEditorial.setEditable(true);
            jTextFieldYear.setEditable(true);
            jComboBoxAuthor.setEditable(true);
        }
    }//GEN-LAST:event_jCheckBoxExistsItemStateChanged

    private void eventFocusComboBoxTitle() {
        jComboBoxTitle.getEditor().getEditorComponent().addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                
            }

            @Override
            public void focusLost(FocusEvent e) {
                if(jComboBoxTitle.getSelectedIndex()<0) return;
                
                jComboBoxAuthor.removeAllItems();
//                jComboBoxAuthor.addItem(jComboBoxTitle.getItemAt(jComboBoxTitle.getSelectedIndex()).getAuthor().getName());
                jComboBoxAuthor.addItem(new Author(jComboBoxTitle.getItemAt(jComboBoxTitle.getSelectedIndex()).getAuthor().getId_author(), 
                                                    jComboBoxTitle.getItemAt(jComboBoxTitle.getSelectedIndex()).getAuthor().getName()));
                jTextFieldEditorial.setText(jComboBoxTitle.getItemAt(jComboBoxTitle.getSelectedIndex()).getEditorial());
                jTextFieldYear.setText(jComboBoxTitle.getItemAt(jComboBoxTitle.getSelectedIndex()).getYear());

            }
        });
    }

    private void openDialogAlert(String tipo, String message1, String message2) {
        DialogAlert dialogAlert = new DialogAlert(jFrameParent, true, tipo, message1, message2);
        dialogAlert.setVisible(true);
    }
    
    private void openDialogAlert(String tipo,String title, String message1, String message2) {
        DialogAlert dialogAlert = new DialogAlert(jFrameParent, true, tipo,title, message1, message2);
        dialogAlert.setVisible(true);
    }

    /**
     * Metodo que permite validar los datos que el usuario ingresa antes de
     * enviar hacia la base de datos. Este retornara un boolean para verificar
     * que todos los campos esten correctamente ingresados.
     *
     * @return
     */
    private boolean validarCamposFormato() {
        //variable de verificación de los campos
        boolean verif = true;
        
        /* Si es un nuevo libro o no */
        if(jCheckBoxExists.isSelected()){ // libro existe
            /* Validación del título: no debe quedar vacio */
            if(jComboBoxTitle.getSelectedIndex() < 0){
                verif = false;
                jLabelErrorTitle.setText("Olvidaste ingresar el título.");
            }
            /* Validación del código: no debe quedar vacio */
            if(jTextFieldCode.getText().length() < 1){
                verif = false;
                jLabelErrorCode.setText("Olvidaste ingresar el código.");
            }
            /* Validación del estado: no debe quedar vacio */
            if(jTextFieldEstado.getText().length() < 1){
                verif = false;
                jLabelErrorEstado.setText("Olvidaste ingresar el estado.");
            }
            
        }else{//nuevo libro
            /* Validación del título: no debe quedar vacio */
            if (jComboBoxTitle.getSelectedItem()==null || jComboBoxTitle.getSelectedItem().toString().isEmpty()){
                verif = false;
                jLabelErrorTitle.setText("Olvidaste ingresar el título.");
            }
            /* Validación del código: no debe quedar vacio */
            if(jTextFieldCode.getText().length() < 1){
                verif = false;
                jLabelErrorCode.setText("Olvidaste ingresar el código.");
            }
            /* Validación del autor: no debe quedar sin seleccionar */
            if(jComboBoxAuthor.getSelectedIndex()<0){
                verif = false;
                jLabelErrorAuthor.setText("Olvidaste ingresar el autor.");
            }
            /* Validación del año: si se ingresa algo valida */
            if(jTextFieldYear.getText().length() > 0){
                if(!validateTextFieldNumber(jTextFieldYear.getText())){
                    verif = false;
                    jLabelErrorYear.setText("Ingre un año válido.");
                }
            }
            /* Validación del código: no debe quedar vacio */
            if(jTextFieldEstado.getText().length() < 1){
                verif = false;
                jLabelErrorEstado.setText("Olvidaste ingresar el estado.");
            }
        
        }
        
        return verif;
    }

    /**
     * Método que permite limpiar mensaje de error de los jLabels
     */
    private void cleanjLabelsError() {
        jLabelErrorTitle.setText("");
        jLabelErrorCode.setText("");
        jLabelErrorAuthor.setText("");
        jLabelErrorEstado.setText("");
        jLabelErrorYear.setText("");
        jLabelErrorEditorial.setText("");
    }

    /**
     * Método que permite limpiar todos los campos de TextField
     */
    private void cleanjTextFields() {
        jTextFieldCode.setText("");
        jTextFieldEditorial.setText("");
        jTextFieldEstado.setText("");
        jTextFieldYear.setText("");
        
        loadAuthors();
        jComboBoxTitle.removeAllItems();
        
        jCheckBoxExists.setSelected(false);
        
    }
    
    /**
     * Método que carga lo Autores en el ComboBox
     */
    private void loadAuthors() {
        jComboBoxAuthor.removeAllItems();
        for (Author author : authors) {
            jComboBoxAuthor.addItem(new Author(author.getId_author(), author.getName()));
        }
        jComboBoxAuthor.setSelectedIndex(-1);
    }
    
    /**
     * Método que valida una cadena de solo números
     * @param cadena
     * @return 
     */
    private boolean validateTextFieldNumber(String cadena) {
        // Si la cadena está vacía, debemos devolver false
        if (cadena.length() == 0) {
            return false;
        }
        for (int x = 0; x < cadena.length(); x++) {
            char c = cadena.charAt(x);
            // Si no está entre 0 y 9
            if (!(c >= '0' && c <= '9')) {
                return false;
            }
        }
        return true;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JCheckBox jCheckBoxExists;
    private javax.swing.JComboBox<Author> jComboBoxAuthor;
    private javax.swing.JComboBox<Book> jComboBoxTitle;
    private javax.swing.JLabel jImgClose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelButtonCreate;
    private javax.swing.JLabel jLabelCI;
    private javax.swing.JLabel jLabelCI1;
    private javax.swing.JLabel jLabelCleanAll;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelErrorAuthor;
    private javax.swing.JLabel jLabelErrorCode;
    private javax.swing.JLabel jLabelErrorEditorial;
    private javax.swing.JLabel jLabelErrorEstado;
    private javax.swing.JLabel jLabelErrorTitle;
    private javax.swing.JLabel jLabelErrorYear;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPhone;
    private javax.swing.JLabel jLabelPhone1;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanelButtonCreate;
    private javax.swing.JPanel jPanelCleanAll;
    private javax.swing.JPanel jPanelClose;
    private javax.swing.JPanel jPanelContent;
    private javax.swing.JPanel jPanelDivide;
    private javax.swing.JPanel jPanelFocusCode;
    private javax.swing.JPanel jPanelFocusEditorial;
    private javax.swing.JPanel jPanelFocusEstate;
    private javax.swing.JPanel jPanelFocusYear;
    private javax.swing.JPanel jPanelForm;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldEditorial;
    private javax.swing.JTextField jTextFieldEstado;
    private javax.swing.JTextField jTextFieldYear;
    // End of variables declaration//GEN-END:variables

    

    

}
